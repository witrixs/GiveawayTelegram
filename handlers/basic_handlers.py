import logging
from aiogram import Dispatcher, Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext

from texts.messages import MESSAGES, BUTTONS
from utils.keyboards import get_main_admin_keyboard, get_participate_keyboard
from database.database import (
    add_participant, get_participants_count, 
    get_giveaway, update_giveaway_message_id, is_admin
)

router = Router()


# –£–¥–∞–ª—ë–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    is_user_admin = await is_admin(message.from_user.id)
    
    if is_user_admin:
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n\n"
            "üéâ –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –≤ Telegram-–∫–∞–Ω–∞–ª–∞—Ö.\n\n"
            "üõ† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
        )
    else:
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
            "üéâ –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –≤ Telegram-–∫–∞–Ω–∞–ª–∞—Ö.\n\n"
            "üéØ –ß—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö, –Ω–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å' –ø–æ–¥ –ø–æ—Å—Ç–∞–º–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –≤ –∫–∞–Ω–∞–ª–∞—Ö.\n\n"
            "üèÜ –£–¥–∞—á–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö!"
        )


@router.message(Command("clear"))
async def cmd_clear(message: Message):
    """–û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º"""
    chat_id = message.chat.id
    start_id = max(1, message.message_id - 100)
    for msg_id in range(start_id, message.message_id + 1):
        try:
            await message.bot.delete_message(chat_id=chat_id, message_id=msg_id)
        except Exception:
            pass


@router.message(Command("admin"))
async def cmd_admin(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin - –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    await state.clear()
    await message.answer(
        MESSAGES["admin_main_menu"],
        reply_markup=get_main_admin_keyboard()
    )


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()
    await callback.message.edit_text(
        MESSAGES["admin_main_menu"],
        reply_markup=get_main_admin_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data.startswith("participate_"))
async def callback_participate(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ"""
    try:
        giveaway_id = int(callback.data.split("_")[1])
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
        giveaway = await get_giveaway(giveaway_id)
        if not giveaway:
            await callback.answer("‚ùå –†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω!", show_alert=True)
            return
            
        if giveaway.status != "active":
            await callback.answer(MESSAGES["giveaway_ended"], show_alert=True)
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
        user = callback.from_user
        success = await add_participant(
            giveaway_id=giveaway_id,
            user_id=user.id,
            username=user.username,
            first_name=user.first_name
        )
        
        if success:
            await callback.answer(MESSAGES["participation_success"], show_alert=True)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–Ω–æ–ø–∫–µ
            participants_count = await get_participants_count(giveaway_id)
            new_keyboard = get_participate_keyboard(giveaway_id, participants_count)
            
            try:
                await callback.message.edit_reply_markup(reply_markup=new_keyboard)
            except Exception as e:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É: {e}")
                
        else:
            await callback.answer(MESSAGES["already_participating"], show_alert=True)
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—á–∞—Å—Ç–∏–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ: {e}")
        await callback.answer(MESSAGES["error_occurred"], show_alert=True)


@router.message()
async def handle_unknown_message(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî —Ä–µ–∞–≥–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –≤ FSM-—Å–æ—Å—Ç–æ—è–Ω–∏–∏"""
    current_state = await state.get_state()
    if current_state is None:
        if await is_admin(message.from_user.id):
            await message.answer(MESSAGES["unknown_command"])
    # –∏–Ω–∞—á–µ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º


def setup_basic_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"""
    dp.include_router(router)
